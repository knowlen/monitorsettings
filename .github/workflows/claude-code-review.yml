name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Only run on Python file changes
    paths:
      - "monitorsettings/**/*.py"
      - "tests/**/*.py"
      - "pyproject.toml"
      - "requirements*.txt"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[blessed,dev]"

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this Python pull request for the monitorsettings package and provide feedback on:
            - Python PEP 8 compliance and this project's black/ruff configuration
            - Type hints correctness (mypy compliance)
            - Potential bugs or logic issues
            - Test coverage with pytest
            - DDC/CI communication best practices
            - Thread safety in async operations
            - Python 3.8+ compatibility

            Focus on:
            - For controllers: UI responsiveness and DDC command handling
            - For base modules: Thread safety and error handling
            - For tests: Coverage of edge cases and mocking appropriateness

            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Python-specific tools for testing and linting
          allowed_tools: "Bash(pytest --cov=monitorsettings),Bash(black --check monitorsettings tests),Bash(ruff check monitorsettings tests),Bash(mypy monitorsettings)"

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')
